### YamlMime:FAQ
metadata:
  title: 'Azure AD PowerShell to Microsoft Graph PowerShell migration FAQ'
  description: Answers to frequently asked questions about the migration from Azure AD PowerShell to Microsoft Graph PowerShell.
  ms.service: active-directory
  ms.workload: identity
  ms.topic: article
  ms.date: 03/28/2022
  ms.author: eunicewaweru
  author: msewaweru
title: Azure AD PowerShell to Microsoft Graph PowerShell migration FAQ
summary: This article provides answers to frequently asked questions about migrating from Azure AD PowerShell to Microsoft Graph PowerShell.

sections:
    - name: Ignored
      questions:
      - question: What happens to Azure AD PowerShell come June 2023?
        answer: |
          In June 2020, we announced the retirement of Azure AD Graph API in favor of the Microsoft Graph API, which provides all the functionality of Azure AD Graph along with new functionality. As a result, all applications calling the Azure AD Graph API would receive an error message from the endpoint after the original proposed retirement date of June 30, 2022. Azure AD PowerShell is one of the applications that utilizes the Azure AD Graph API. 
          
          Azure AD PowerShell has continued to function after June 2023 to allow users more time to migrate to [Microsoft Graph PowerShell](https://docs.microsoft.com/en-us/powershell/microsoftgraph/overview). The Azure AD and Azure AD-Preview PowerShell modules are planned for deprecation on March 30, 2024. After the deprecation is announced, the only support offered for these PowerShell modules will be support in migrating to Microsoft Graph PowerShell SDK and security fixes. Once these modules are deprecated, they will continue to work for a minimum of six (6) months before being retired. We encourage you to migrate to Microsoft Graph PowerShell. 
          

      - question: What is Microsoft doing about the gaps in functionality between Azure AD and Microsoft Graph PowerShell modules?
        answer: |
          As part of the parity work, we're looking at the MSOnline (MSOL) and Azure AD PowerShell cmdlets and mapping the functionality to Microsoft Graph PowerShell. This ensures that all existing scenarios are available in Microsoft Graph PowerShell. To help with migration, see the [cmdlet map](https://docs.microsoft.com/en-us/powershell/microsoftgraph/azuread-msoline-cmdlet-map)  of MSOnline and Azure AD PowerShell cmdlets to Microsoft Graph PowerShell. 
          
          Users have also reached out with specific scenarios and cmdlets that we'll add to Microsoft Graph PowerShell. We've added tools such as the [Find-MgGraphCommand](https://docs.microsoft.com/en-us/powershell/microsoftgraph/find-mg-graph-command) and [Find-MgGraphPermission](https://docs.microsoft.com/en-us/powershell/microsoftgraph/find-mg-graph-permission) to help you find and use the appropriate Microsoft Graph PowerShell cmdlets.  

      - question: What is Microsoft doing to improve the Microsoft Graph PowerShell user experience?
        answer: |
          Microsoft Graph PowerShell cmdlets are autogenerated from the Microsoft Graph API schema. The process has its advantages, for example, providing a rich set of cmdlets that cover the whole API landscape. The disadvantage is that the resultant cmdlets may not be user-friendly compared to human-authored cmdlets. Consequently, we're actively working on usability improvements.  
          
          The Microsoft Graph PowerShell SDK is also open source and users can contribute to the usability work or add new scenarios to manage Azure AD.
          
      - question: How is Microsoft going to support users who are migrating to Microsoft Graph PowerShell?
        answer: |
          We're working on additional tools that will help migrate existing scripts that target Azure AD PowerShell so that these scripts can use Microsoft Graph PowerShell cmdlets instead.
          
          Send us your feedback or suggestions on how we can improve Azure AD management within Microsoft Graph PowerShell SDK by [logging an issue](https://github.com/microsoftgraph/msgraph-sdk-powershell/issues/new).          
